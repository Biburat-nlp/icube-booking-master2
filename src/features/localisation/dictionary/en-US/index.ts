// import { DOCUMENT_TYPE, ENTITY_TYPE } from "@/app/types/common.ts";
import { title } from "process";

export const en_dictionary = {
    common: {
        left: "left",
        before_start: "before the start",
        words: {
            add: "add | adding | added",
            edit: "edit | editing | edited",
            arrange: "arrange | arranging | arranged",
            remove: "remove | removing | removed",
            guest: "guest | guest",
            guests: "guests | guests",
            locker: "locker | locker",
            lockers: "lockers | lockers",
            parking_place: "parking place | parking place",
            parking_places: "parking places | parking places",
            working_place: "working place | working place",
            working_places: "working places | working places",
            meeting_room: "meeting room | meeting room | meeting room",
            meeting_rooms: "meeting rooms | meeting rooms",
            colleague: "colleague | colleague",
            colleagues: "colleagues | colleagues",
            room: "room | room",
            rooms: "rooms | rooms",
            object: "object",
            sign_out: "sign out",
            office: "office",
            offices: "offices",
            pincode: "PIN-code",
            profile: "Profile",
            booking_history: "Booking history",
            visit_user: "Who is the guest going to",
            find: "Find",
            route: "Route",
            workspace: "Workspace",
            all: "All",
            request: "request",
            requests: "requests",
            occupied: "occupied",
            free: "free",
            are_free: "free",
        },
        buttons: {
            back: "Back",
            cancel: "Cancel",
            save: "Save",
            yes_cancel: "Yes, cancel",
            book: "Book",
            open: "Open",
            save_changes: "Save changes",
            ok: "OK",
            no: "No",
            yes: "Yes",
            my_booking: "My booking",
            add_new_booking: "Add a new booking",
            parameters: "Parameters",
            create_meeting_link: "Create meeting link",
        },
        dialogs: {
            confirm_delete: {
                text: "The meeting will be cancelled and all participants will receive a notification | The closet will be open | The workplace will become available to other users | The parking space will become available to other users",
                title: "Cancel a Booking?",
            },
            delete_confirmed: {
                title: "Booking cancelled",
            },
            pin_code: {
                text: "The pin code is valid until the end of the day",
            },
        },
    },
    alerts: {
        locker_booked: "This locker is already booked, choose another locker",
        select_cell: "Choose a locker",
        error_occurred: "An error occurred",
        no_access: "No access",
        close_cell_request: "Please close the locker",
        booking_not_found: "The booking was not found",
        booking_canceled: "Reservations have been canceled",
        booking_after_workday_end: "It is not possible to book a time after the office is closed",
        no_available_timeslots: "No available timeslots",
        booking_on_dates_time: "Reservation for the {datetime}",
        nothing_found: "Nothing found",
        workspace_required: "Select an office or a floor",
    },
    errors: {
        please_select_booking_dates: "Please select booking dates",
        invitation_not_found: "The invitation was not found",
        guest_not_found: "The guest was not found",
        fatal: "Something went wrong",
        cant_book_in_past: "You can't book in the past",
        end_before_start: "The end time cannot be earlier than the start time",
        incorrect_pincode: "Invalid PIN code",
        get_directions_error: "Could not get directions",
        uploader_element_was_not_found: "The uploader element was not found",
    },
    uploader: {
        label: "Upload image",
    },
    modals: {
        locker_cell_reservations: {
            buttons: {
                add_new_booking: "Add new booking",
            },
        },
        locker_cell_booking: {
            title: "Book a locker",
            buttons: {
                whole_day: "For the whole day",
                end_of_week: "Until the end of the week",
                few_days: "For a few days",
            },
        },
        book_meeting_room: {
            title: "Book a meeting room | Change booking",
            labels: {
                meeting_topic: "Meeting topic",
                guests: "Invited guests",
                users: "Invited users",
                total_invited: "Total invited:",
            },
            notifications: {
                meeting_room_booked: "Meeting room {title} is booked",
                meeting_room_booked_time_before: "{time} left until the meeting starts",
                meeting_room_booked_caption: "Notifications sent to participants",
            },
        },
        book_working_place: {
            title: "Book workplace {workplace}",
            notifications: {
                working_place_booked: "Workplace {title} is booked",
                working_place_booked_time_before: "{time} left until booking starts",
            },
        },
        book_parking_place: {
            title: "Book parking for {who}",
            title2: "Book parking ",
            notifications: {
                parking_place_booked: "Parking {title} is booked",
                parking_place_booked_time_before: "{time} left until booking starts",
            },
            labels: {
                title: "Parking slot ",
            }
        },
        find_meeting_room: {
            title: "Free meeting rooms:",
            labels: {
                vks: "vks",
                flipchart: "Flipchart",
                etc: "etc.",
                at_least_places: "Places, at least:",
                meeting_room: "Meeting room {room}",
                free_meeting_rooms_on_other_floors: "There are free meeting rooms on other floors",
                my_meeting_rooms: "My meeting rooms",
                no_data: "You don't have any meeting rooms booked | You haven't booked the meeting rooms yet",
                booking_history: "Booking history:",
            },
            buttons: {
                free_meeting_room: "Free",
                busy_meeting_room: "The meeting room is busy at this time, it will be free on {dateTime}",
                show: "Show",
                go_onto: "Go to {floor}",
            },
        },
        meeting_order: {
            title: "The meeting room {room_name} has already been booked by you",
            labels: {
                meeting_topic: "The topic of the meeting",
                guests: "Invited",
            },
            buttons: {
                add_new_booking: "Add a new booking",
            },
        },
        locker_view: {
            labels: {
                by_day_of_week: "By day of the week",
            },
        },
        book_locker: {
            title: "Book a locker",
            text: "Long term bookings are available on the iCube app",
            buttons: {
                whole_day: "For the rest of the day",
            },
        },
        unlock_cell_dialog: {
            locker: "locker",
            open: "is open",
            continue_booking: "Continue with the booking?",
        },
        meeting_room_booked: "Meeting room {title} is booked",
        meeting_room_title: "Meeting room {title}",
        workplace_booked: "Workplace {title} is booked",
        workplace_title: "Workplace {title}",
        locker_cell_booked: "Cell {number} is booked",
        locker_cell_title: "Cell {number}",
        parking_booked: "Parking {title} is booked",
        parking_title: "Parking {title}",
    },
    labels: {
        no_data: "There are no reserved {something}",
        loading: "Loading...",
        rows_per_page: "Rows per page:",
        no_active: "There are no active {something}",
        start_date: "Start date",
        end_date: "End date",
    },
    until: "until",
    entity: {
        locker: "Locker",
        parking_place: "Parking place",
        meeting_room: "Meeting room",
        working_place: "Working place",
    },
    days: {
        monday: "Monday | Mon",
        tuesday: "Tuesday | Tue",
        wednesday: "Wednesday | Wed",
        thursday: "Thursday | Thu",
        friday: "Friday | Fri",
        saturday: "Saturday | Sat",
        sunday: "Sunday | Sun",
    },
    months: {
        january: "January | Jan",
        february: "February | Feb",
        march: "March | Mar",
        april: "April | Apr",
        may: "May | May",
        june: "June | June",
        july: "July | July",
        august: "August | Aug",
        september: "September | Sept",
        october: "October | Oct",
        november: "November | Nov",
        december: "December | Dec",
    },
    auth_kiosk_user: {
        title: "Enter the PIN code",
        text: "You can find it in your personal account",
    },
    locker_kiosk_index_page: {
        description:
            "Here you can leave your belongings for storage. Select a free (green) locker and specify how long you would like to reserve it for. If you have already booked a locker in the app, click on My Reservations button",
        footer: "Full locker booking functionality is available in the iCube app",
    },
    my_cells: {
        your_cells: "Your current bookings in",
        module: "module",
        lockers_in_other_modules: "You also have lockers in other modules:",
    },
    new_booking: {
        your_locker: "Your locker",
        booked: "reserved",
        left: "Left",
    },
    my_booking: {
        tables: {
            lockers: "Lockers | lockers",
            meeting_rooms: "Meeting rooms | meeting rooms",
            workplaces: "Workplaces | workplaces",
            parking_places: "Parking places | parking places",
        },
        labels: {
            copy_link: "Copy link",
            link_copied: "Link is copied",
        },
        title: "My booking",
        no_booked: "No booked",
    },
    profile: {
        title: "My profile",
        form: {
            first_name: "First Name",
            last_name: "Last Name",
            middle_name: "Middle Name",
            username: "Username",
            messenger_link: "Messenger link",
            work_day_start: "Work day start",
            work_day_end: "Work day end",
            organization: "Organization",
            upload_photo: "Upload photo",
            email: "Email",
            document_type: "Document type",
            document_number: "Series and number",
            vehicle_model: "Vehicle (brand)",
            vehicle_number: "License plate number",
        },
        errors: {
            validation_error: "Validation error",
            too_many_images: "It is not possible to set more than 1 image as an avatar",
            could_not_get_user_data: "Couldn't get user data",
        },
        placeholders: {
            who_guest_visiting: "Who is the guest visiting",
            visit_purpose: "Purpose of visit",
            for_who: "For whom",
            guest: "Guest",
            office: "Office",
            meeting_topic: "Meeting topic",
            invited_users: "Invited users",
            car_model: "Vehicle (brand)",
            car_number: "License plate number",
        },
    },
    my_guests: {
        buttons: {
            add_request: "Add a request",
            add_guest: "Add guest",
            back: "Back",
            yes_cancel: "Yes, cancel",
        },
        labels: {
            guests: "Guests:",
            no_guests: "No guests invited",
            no_data: "You don't have any invitations",
            people: "people",
            offices: "Offices",
            all_offices: "All offices",
            parking_booking_status: "Parking is reserved | Parking is not booked",
            pass_order_status: "The pass has been ordered | The pass has not been ordered",
        },
        modals: {
            booking_guests: {
                title: "Request",
                cancel_title: "Cancel?",
                cancel_text: "The entry will be deleted, if passes or parking reservations were associated with it, they will also be canceled",
                buttons: {
                    cancel_request: "Cancel request",
                    add_guest: "Add a guest",
                    guests: "Guests",
                },
                labels: {
                    guests: "Guests",
                    to_whom: "Who is the guest coming to",
                    reservation_reason: "The purpose of the guest's arrival",
                    office: "Office",
                },
            },
            edit_guest: {
                buttons: {
                    cancel_registration: "Cancel registration",
                },
                title: "Guest",
            },
        },
        dialogs: {
            cancel_invitation: {
                title: "Cancel?",
                text: "The entry will be deleted, if passes or parking reservations were associated with it, they will also be canceled",
            },
        },
        forms: {
            edit_guest: {
                book_parking: "Book a parking space",
                citizen_passport: "Citizen passport",
                document_number: "Series and Number",
                document_type: "Document",
                disabled_tooltip: "Please select a guest",
                driver_license: "Driver's license",
                email: "E-mail",
                first_name: "Name",
                international_passport: "International passport",
                last_name: "Patronymic",
                middle_name: "Surname",
                military_id: "Military ID",
                order_pass: "Order a pass",
                organization: "Organization",
                other: "Other",
                vehicle_model: "Vehicle (brand)",
                vehicle_number: "License plate number",
            },
        },
        title: "My guests",
    },
    icube_viewer: {
        forms: {
            entity_placing_form: {
                title: "Place in the openspace",
                ok: "Place",
            },
        },
        navigation: {
            get_directions: "Get directions",
            start: "Start",
            entrance: "Entrance",
            enter_the: "Enter the",
            move_forward: "Move forward",
            you_are_at_the_place: "You are at the place",
            im_at_the_place: "I'm at the place",
        },
        dialog: {
            remove_from_openspace: "Remove the {something} from the openspace?",
        },
        notifications: {
            entity_placed: "The {something} has been placed",
            entity_removed: "The {something} has been removed",
            entity_moved: "The {something} has been moved",
            entity_coords_update_error: "Error updating {something} coordinates",
        },
    },
    routes: {
        colleagues: "Find colleague",
        devices: "Find device",
        invitations: "My guests",
        booking: "Booking",
        lockers: "Lockers",
        meeting_rooms: "Meeting rooms",
        my_office: "My office",
        parkings: "Parking",
        rooms: "Find room",
        units: "Find unit",
        workplaces: "Workplaces",
        analytics: "Analytics",
        navigation: "Navigation",
        profile: "Profile",
    },
    validations: {
        required: "Required field",
        maxLength: "Max length is {max}",
        minLength: "Min length is {min}",
        min_length_error: "Minimum number of characters is {min}",
        email: "Incorrect email",
        sameAs: "Fields should match",
        maxValue: "Max value is {max}",
        minValue: "Min value is {min}",
        alpha: "The field must not contain numbers",
        notOverlappingIntervals: "The selected time is already booked",
        notInThePastInterval: "Time cannot be in the past",
        notInThePastIntervalWithDeviation: "Time cannot be in the past",
        minDurationInMinutes: "Minimum duration: {minutes} min.",
        workDayTimeValidator: "The beginning of the working day cannot be after its end",
    },
    sidebar: {
        events: "Events",
        request: "Request",
        chat: "Chat",
        comfort: "Comfort",
        lighting: "Lighting",
        multimedia: "Multimedia",
        privacy: "Privacy",
        settings: "Settings",
        light_theme: "Light mode",
        dark_theme: "Dark mode",
        language_selector: "Change language / Сменить язык",
        language_section_title: "Language / Язык",
        language_russian: "🇷🇺 Русский",
        language_english: "🇺🇸 English",
    },
    authStore: {
        refresh_failed: "Authentification failed",
    },
    lockers_page: {
        greeting_modal: {
            title: "Welcome to the locker reservation module!",
            text: "Select the office and floor where you wish to leave your belongings. Then specify the desired locker reservation period. The system will check and offer you the available options for this period.",
            button: "Select locker",
        },
        book_cell_dialog: {
            title: "Locker {cell_number}",
            buttons: {
                ok: "That's correct",
            },
        },
        reserved_cell_dialog: {
            text: "The PIN code for locker access is stored in the \"Access Codes\" section in your Personal Account.",
        },
        lockers_overview: {
            titles: {
                free_lockers: "Free lockers:",
                my_lockers: "My lockers:",
                booking_history: "Booking history:",
            },
            labels: {
                in_module: "In locker{name}:",
                free_lockers_on_other_floors: "There are free lockers on other floors:",
                no_data: "You don't have any reserved lockers",
                everything_busy: "Everything is busy at this time",
            },
            buttons: {
                show_on_map: "Show on the map",
                free_cells: "available cells",
            },
        },
    },
    working_place_page: {
        page_title: "The workplace {workplace} has already been booked by you",
        greeting_modal: {
            title: "Welcome to the workplace reservation module!",
            text: "Select the office and floor on which you wish to book a workplace. Then specify the desired booking period. The system will check and offer you the available options for this period.",
            button: "Select a workplace",
        },
        filter_params: {
            has_keyboard: "Has keyboard",
            has_window_nearby: "Has window nearby",
            has_printer_nearby: "Has printer nearby",
            has_charger_for_mac: "Has charger for mac",
        },
    },
    meeting_rooms_page: {
        greeting_modal: {
            title: "Welcome to the meeting room booking module!",
            text: "Select the office and floor on which you wish to book a meeting room. Then specify the desired booking period. The system will check and offer you the available options for this period.",
            button: "Select a meeting room",
        },
        filter_params: {
            has_conference_call: "Conference call",
            has_drawing_board: "Drawing board",
            has_multimedia_panel: "Multimedia panel",
        },
    },
    parking_page: {
        greeting_modal: {
            title: "Welcome to the parking lot reservation module!",
            text: "Specify the desired parking reservation period. The system will check and offer you available options for this period.",
            button: "Find parking",
            labels: {
                user: "For me",
                guest: "For guest",
                mock_guest: "Guest 1",
                mock_guest2: "Guest 2",
                mock_guest3: "Guest 3",
            },
            },
        },
    find_room_page: {
        greeting_modal: {
            title: "Welcome to the room search module!",
            text: "Select the office and floor where you wish to find a room. The system will show you the room on the selected floor, and then you will be able to get directions to it.",
        },
    },
    find_colleague_page: {
        greeting_modal: {
            title: "Welcome to the colleague search module!",
            text: "Select the office and floor from where to start. The system will show you the desktop booked by your colleague, and then you will be able to get directions of how you can get there.",
        },
    },
    analytics_page: {
        meeting_rooms_occupancy: "Meeting rooms occupancy",
        meeting_rooms_total: "Total meeting rooms {number}",
        meeting_rooms_heatmap: "Meeting rooms heatmap",
        desktops_occupancy: "Working places occupancy",
        desktops_usage: "Working places usage",
        desktops_total: "Total working places {number}",
        parkings_occupancy: "Parking places occupancy",
        parkings_usage: "Parking places usage",
        parkings_total: "Total parking places {number}",
    },
    server_config: {
        title: "Server settings",
        labels: {
            server_address: "Server address",
            custom_server_in_use: "Custom server address is in use",
            enter_full_url: "Enter the full server URL (e.g. https://api.example.com)",
        },
        placeholders: {
            url_placeholder: "https://api.example.com",
        },
        buttons: {
            save: "Save",
            reset: "Reset to default",
            close: "Close",
        },
        errors: {
            empty_address: "Server address cannot be empty",
            invalid_url: "Invalid URL format",
            save_error: "Error saving",
            reset_error: "Error resetting",
        },
        loading: "Loading settings...",
        server_settings_title: "Server settings",
    },
    filters: {
        select_office: "Select office",
        conference_call: "Conference call",
        drawing_board: "Drawing board",
        multimedia_panel: "Multimedia panel",
        has_keyboard: "Has keyboard",
        has_window_nearby: "Has window nearby",
        has_printer_nearby: "Has printer nearby",
        has_charger_for_mac: "Has charger for Mac",
        monitor: "Monitor",
        two_monitors: "2 monitors",
    },
    navigation: {
        build_route: "Build route",
    },
    document_types: {
        citizen_passport: "Citizen passport",
        international_passport: "International passport",
        military_id: "Military ID",
    },
    invitations_page: {
        tabs: {
            requests: "Requests",
            calendar: "Calendar",
        },
        add_request: "Add request",
        visiting_to: "To {name}",
        person: "person",
        people_2_4: "people",
        people_5_plus: "people",
    },
    navigation_page: {
        placeholders: {
            room: "Room",
            employee: "Employee",
        },
    },
};